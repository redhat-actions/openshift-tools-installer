name: Install from GitHub Example
on:
  push:
  workflow_dispatch:
  pull_request:
  schedule:
    - cron: '0 0 * * *'  # every day at midnight

env:
  SOURCE: github

jobs:
  latest-version:
    name: Latest version
    strategy:
      fail-fast: false
      matrix:
        os: [ "macos-latest", "windows-latest", "ubuntu-20.04" ]
        cache: [ true, false ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: ./
        id: install_clients
        with:
          source: ${{ env.SOURCE }}
          skip_cache: ${{ matrix.cache }}
          # github_pat: ${{ secrets.PAT }}
          crda: "latest"
          kam: "latest"
          kamel: "latest"
          kn: "latest"
          # kustomize: "latest"           # Temporarily Disable, see https://github.com/redhat-actions/openshift-tools-installer/issues/42
          opm: "latest"
          # operator-sdk: "latest"        # Not available on windows
          s2i: "latest"
          tkn: "latest"
          yq: "latest"

      - name: Echo output of installer
        if: always()
        run: echo "${{ steps.install_clients.outputs.installed }}"

      - name: Run installed tools
        shell: bash
        run: |
          set -x
          crda version
          kam version
          kamel version
          kn version
          # kustomize version
          opm version
          s2i version
          tkn version || true
          yq --version

  known-version:
    name: Known version
    strategy:
      fail-fast: false
      matrix:
        os: [ "macos-latest", "windows-latest", "ubuntu-20.04" ]
        cache: [ true, false ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: ./
        id: install_clients
        with:
          source: ${{ env.SOURCE }}
          skip_cache: ${{ matrix.cache }}
          # github_pat: ${{ secrets.PAT }}
          crda: "0.2.3"
          kam: "0.0.30"
          kamel: "1"
          kn: "0.21"
          kustomize: "4.1"
          opm: "1"
          s2i: "1.2"
          # operator-sdk: "1"                  # Not available on windows
          tkn: "0.17"
          yq: "3.4.1"                          # v3.4.1 comes in page 2 of the API response, this tests pagination

      - name: Echo output of installer
        if: always()
        run: echo "${{ steps.install_clients.outputs.installed }}"

      - name: Run installed tools
        shell: bash
        run: |
          set -x
          crda version
          kam version
          kamel version
          kn version
          kustomize version
          opm version
          s2i version
          tkn version || true
          yq --version

  latest-version-linux-macos:
    name: Latest version on linux & macOS
    strategy:
      fail-fast: false
      matrix:
        os: [ "macos-latest", "ubuntu-20.04" ]
        cache: [ true, false ]
        # version: [ "latest", "1" ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: ./
        id: install_clients
        with:
          source: ${{ env.SOURCE }}
          skip_cache: ${{ matrix.cache }}
          # github_pat: ${{ secrets.PAT }}
          operator-sdk: "latest"
          kustomize: "latest"

      - name: Echo output of installer
        if: always()
        run: echo "${{ steps.install_clients.outputs.installed }}"

      - name: Run installed tools
        run: |
          set -x
          operator-sdk version
          kustomize version
  known-version-linux-macos:
    name: Latest version on linux & macOS
    strategy:
      fail-fast: false
      matrix:
        os: [ "macos-latest", "ubuntu-20.04" ]
        cache: [ true, false ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: ./
        id: install_clients
        with:
          source: ${{ env.SOURCE }}
          skip_cache: ${{ matrix.cache }}
          # github_pat: ${{ secrets.PAT }}
          operator-sdk: "1"

      - name: Echo output of installer
        if: always()
        run: echo "${{ steps.install_clients.outputs.installed }}"

      - name: Run installed tools
        run: |
          set -x
          operator-sdk version

  only-linux:
    name: Latest and known version only linux
    strategy:
      fail-fast: false
      matrix:
        version: [ "latest", "1.4.1" ]
        cache: [ true, false ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: ./
        id: install_clients
        with:
          source: ${{ env.SOURCE }}
          skip_cache: ${{ matrix.cache }}
          # github_pat: ${{ secrets.PAT }}
          chart-verifier: ${{ matrix.version }}

      - name: Echo output of installer
        if: always()
        run: echo "${{ steps.install_clients.outputs.installed }}"

      - name: Run installed tools
        run: |
         chart-verifier --help
