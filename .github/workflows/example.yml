name: Example Workflow
on:
  push:
  workflow_dispatch:
  pull_request:
  schedule:
    - cron: '0 0 * * *'  # every day at midnight

# env:
  # CLI_INSTALLER_SKIP_CACHE: true

jobs:
  install-latest-both:
    name: Installation latest from mirror and Github both
    strategy:
      fail-fast: false
      matrix:
        os: [ "macos-latest", "windows-latest", "ubuntu-20.04" ]
        cache: [ true, false ]
        source: [ "mirror", "github" ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: ./
        id: install_clients
        with:
          source: ${{ matrix.source }}
          github_pat: ${{ github.token }}
          kamel: "latest"
          kam: "latest"
          opm: "latest"
          # operator-sdk: "latest"        # Not available on windows
          tkn: "latest"
        env:
          CLI_INSTALLER_SKIP_CACHE: ${{ matrix.cache }}

      - name: Echo output of installer
        if: always()
        run: echo "${{ steps.install_clients.outputs.installed }}"

      - name: Run some executables
        shell: bash
        run: |
          set -x
          kam version
          kamel version
          opm version
          tkn version || true

  install-versioned-mirror-only:
    name: Installation versioned example on mirror only
    strategy:
      fail-fast: false
      matrix:
        os: [ "macos-latest", "windows-latest", "ubuntu-20.04" ]
        cache: [ "true", "false" ]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: ./
        with:
          source: mirror
          crc: "*"
          helm: "3.5"
          kam: "1"
          kamel: "1"
          kn: "0.15"
          oc: "4"
          odo: "2"
          # operator-sdk: "4.7"         # Not available on windows
          opm: "4.6"
          # openshift-install: "4.x"    # Not available on windows
          # opm: "4"                    # Only available on linux
          tkn: "0.15"
        env:
          CLI_INSTALLER_SKIP_CACHE: ${{ matrix.cache }}

      - name: Run some executables
        run: |
          # set -x
          crc version
          helm version
          kam version
          kamel version
          kn version
          oc version
          odo version
          opm version
          tkn version || true

  install-versioned-github-only:
    name: Installation versioned example on Github only
    strategy:
      fail-fast: false
      matrix:
        os: [ "macos-latest", "windows-latest", "ubuntu-20.04" ]
        cache: [ "true", "false" ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: ./
        with:
          source: "github"
          github_pat: ${{ github.token }}
          kam: "0.0.30"
          kamel: "1"
          opm: "1"
          s2i: "1.2"
          # operator-sdk: "1"         # Not available on windows
          tkn: "0.17"
        env:
          CLI_INSTALLER_SKIP_CACHE: ${{ matrix.cache }}

      - name: Run some executables
        run: |
          # set -x
          kam version
          kamel version
          opm version
          s2i version
          tkn version || true

  install-latest-mirror-only:
    name: Installation latest example on mirror only
    strategy:
      fail-fast: false
      matrix:
        os: [ "macos-latest", "windows-latest", "ubuntu-20.04" ]
        cache: [ "true", "false" ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: ./
        with:
          source: "mirror"
          crc: "*"
          helm: "latest"
          kn: "latest"
          oc: "latest"
          odo: "latest"
          # operator-sdk: "4.7"         # Not available on windows
          # openshift-install: "4.x"    # Not available on windows
        env:
          CLI_INSTALLER_SKIP_CACHE: ${{ matrix.cache }}

      - name: Run some executables
        run: |
          # set -x
          crc version
          helm version
          kn version
          oc version
          odo version

  install-linux-macos-latest-mirror:
    name: Installation latest example for mirror on linux and macos
    strategy:
      fail-fast: false
      matrix:
        os: [ "macos-latest", "ubuntu-20.04" ]
        cache: [ "true", "false" ]
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - uses: ./
        with:
          source: "mirror"
          openshift-install: "latest"
          operator-sdk: "latest"
        env:
          CLI_INSTALLER_SKIP_CACHE: ${{ matrix.cache }}

      - name: Run some executables
        run: |
          set -x
          openshift-install version
          operator-sdk version

  install-linux-versioned-mirror:
    name: Installation versioned example for mirror on linux only
    strategy:
      fail-fast: false
      matrix:
        cache: [ "true", "false" ]
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - uses: ./
        with:
          source: "mirror"
          oc: "3"
          openshift-install: "4.x"
          opm: "4"
          operator-sdk: "4.7"
        env:
          CLI_INSTALLER_SKIP_CACHE: ${{ matrix.cache }}

      - name: Run some executables
        run: |
          set -x
          oc version
          opm version
          openshift-install version
          operator-sdk version

  install-macos-versioned-mirror:
    name: Installation example for mirror on macos only
    strategy:
      fail-fast: false
      matrix:
        cache: [ "true", "false" ]
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: ./
        with:
          source: mirror
          openshift-install: "4.x"
          operator-sdk: "4.7"
        env:
          CLI_INSTALLER_SKIP_CACHE: ${{ matrix.cache }}

      - name: Run some executables
        run: |
          set -x
          openshift-install version
          operator-sdk version

  install-linux-macos-github:
    name: Installation example for github on macos and linux
    strategy:
      fail-fast: false
      matrix:
        os: [ "macos-latest", "ubuntu-20.04" ]
        cache: [ "true", "false" ]
        version: [latest, "1.5"]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: ./
        with:
          source: github
          github_pat: ${{ github.token }}
          operator-sdk: ${{ matrix.version }}
        env:
          CLI_INSTALLER_SKIP_CACHE: ${{ matrix.cache }}

      - name: Run some executables
        run: |
          set -x
          operator-sdk version

  install-s2i-latest-github:
    name: Installation example of s2i from Github
    strategy:
      fail-fast: false
      matrix:
        os: [ "macos-latest", "ubuntu-20.04" ]
        cache: [ "true", "false" ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: ./
        with:
          source: github
          github_pat: ${{ github.token }}
          s2i: "latest"
        env:
          CLI_INSTALLER_SKIP_CACHE: ${{ matrix.cache }}

      - name: Run some executables
        run: |
          set -x
          s2i version
